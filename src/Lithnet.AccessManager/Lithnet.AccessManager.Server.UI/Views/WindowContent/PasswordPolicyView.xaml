<UserControl x:Class="Lithnet.AccessManager.Server.UI.PasswordPolicyView"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Lithnet.AccessManager.Server.UI"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             Dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d">
   <AdornerDecorator>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="400"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Grid.Column="0"
                       Content="Policy name"
                       Visibility="{Binding IsNotDefault, Converter={StaticResource BooleanToVisibilityConverter}}"
                       Margin="5"/>
            <TextBox Grid.Row="0" Grid.Column="1" 
                         Text="{Binding Name, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                         IsReadOnly="False"
                         Visibility="{Binding IsNotDefault, Converter={StaticResource BooleanToVisibilityConverter}}"
                         ToolTip="Enter a friendly name for this policy"
                         Margin="5"/>

            <Label Grid.Row="1" Grid.Column="0"
                   Content="Policy target group"
                   Visibility="{Binding IsNotDefault, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Margin="5"/>
            <Grid Grid.Row="1" Grid.Column="1"
                   Visibility="{Binding IsNotDefault, Converter={StaticResource BooleanToVisibilityConverter}}"
                  >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Row="0"
                         Grid.Column="0"
                         Text="{Binding DisplayName, Mode=OneWay, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}"
                         IsReadOnly="true"
                         HorizontalAlignment="Stretch"
                         Margin="5"/>
                <Button Grid.Row="0"
                        Grid.Column="1"
                        Command="{s:Action SelectTarget}"
                        Content="..."
                        Width="30"
                        Margin="2" />
            </Grid>

            <Label Grid.Row="2" Grid.Column="0"
                   Content="Policy target group type"
                   Visibility="{Binding IsNotDefault, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Margin="5"/>

            <Label Grid.Row="2" Grid.Column="1"
                   Content="{Binding TargetType, Converter={StaticResource EnumDescriptionConverter}, Mode=OneWay}"
                   Visibility="{Binding IsNotDefault, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Margin="5"/>

            <Label Grid.Row="5" Grid.Column="0"
                       Content="Maximum password age (days)"
                       Margin="5"/>
            <mah:NumericUpDown Grid.Row="5" Grid.Column="1" 
                               Value="{Binding MaximumPasswordAgeDays, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                               IsReadOnly="false"
                               Minimum="1"
                               Width="150"
                               HorizontalAlignment="Left"
                               ToolTip="Specify the number of days before the password must be changed"
                               Margin="5"/>

            <Label Grid.Row="3" Grid.Column="0"
                   Content="Password length"
                   Margin="5"/>
            <mah:NumericUpDown Grid.Row="3" Grid.Column="1" 
                               Value="{Binding PasswordLength, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                               IsReadOnly="false"
                               Minimum="8"
                               Maximum="255"
                               Width="150"
                               HorizontalAlignment="Left"
                               ToolTip="Specify the length of the password"
                               Margin="5"/>
            <Label Grid.Row="6" Grid.Column="0"
                   Content="Number of previous passwords to keep"
                   Margin="5"/>
            <mah:NumericUpDown Grid.Row="6" Grid.Column="1" 
                               Value="{Binding MinimumNumberOfPasswords, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                               IsReadOnly="false"
                               Minimum="0"
                               Maximum="600"
                               Width="150"
                               HorizontalAlignment="Left"
                               ToolTip="The number of historical passwords to retain"
                               Margin="5"/>

            <Label Grid.Row="7" Grid.Column="0"
                   Content="Number of days to keep previous passwords"
                   Margin="5"/>
            <mah:NumericUpDown Grid.Row="7" Grid.Column="1" 
                               Value="{Binding MinimumPasswordHistoryAgeDays, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                               IsReadOnly="false"
                               Minimum="0"
                               Maximum="365"
                               Width="150"
                               HorizontalAlignment="Left"
                               ToolTip="Specifies how long to retain historial passwords for, based on when they were rotated"
                               Margin="5"/>

            <Label Grid.Row="4" Grid.Column="0"
                   Content="Password composition"
                   Margin="5"/>
            <StackPanel Grid.Row="4"
                        Grid.Column="1">
                <CheckBox Content="Use lower-case letters"
                          IsChecked="{Binding UseLower, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                          Margin="5 5 0 0"/>
                <CheckBox Content="Use upper-case letters"
                          IsChecked="{Binding UseUpper, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                          Margin="5 5 0 0"/>
                <CheckBox Content="Use numbers"
                          IsChecked="{Binding UseNumeric, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                          Margin="5 5 0 0 "/>
                <CheckBox Content="Use symbols"
                          IsChecked="{Binding UseSymbol, ValidatesOnDataErrors=True, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged}"
                          Margin="5 5 0 5 "/>

            </StackPanel>

        </Grid>
    </AdornerDecorator>
</UserControl>