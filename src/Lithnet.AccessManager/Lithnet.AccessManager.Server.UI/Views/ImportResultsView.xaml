<UserControl x:Class="Lithnet.AccessManager.Server.UI.ImportResultsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Lithnet.AccessManager.Server.UI"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             Dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" 
            d:DesignWidth="800"
             Margin="5">
    <StackPanel>
        <DockPanel>
            <!--<Button DockPanel.Dock="Right" Margin="5" Click="{s:Action Help}" Background="Transparent" BorderThickness="0" Focusable="False" >
                <iconPacks:PackIconMaterialLight Kind="HelpCircle" />
            </Button>-->
            <Label DockPanel.Dock="Left" Style="{DynamicResource DescriptionHeaderStyle}" Content="Import results" />
        </DockPanel>

        <Label Margin="5"
               Style="{DynamicResource SubDescriptionHeaderStyle}"
               Content="Import settings" />


        <CheckBox Margin="10 5 5 5"
                  Content="Where a rule for a target already exists, merge the permissions into that rule"
                  Background="Transparent"
                  IsChecked="{Binding Merge}"/>

        <CheckBox Margin="10 5 5 5"
                  Content="Overwrite conflicting settings in the existing rule with the values from the new rule"
                  Background="Transparent"
                  IsEnabled="{Binding Merge}"
                  IsChecked="{Binding MergeOverwrite}"/>

        <Label Margin="5" Style="{DynamicResource SubDescriptionHeaderStyle}" Content="Discovery errors" 
                  Visibility="{Binding HasDiscoveryErrors, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <TextBlock Margin="10 5 5 5" 
           Visibility="{Binding HasDiscoveryErrors, Converter={StaticResource BooleanToVisibilityConverter}}"
           Text="{Binding DiscoveryErrorCount}"/>

        <ListView BorderBrush="{StaticResource MahApps.Brushes.Control.Border}" BorderThickness="1"
                  ItemsSource="{Binding DiscoveryErrors}"
                  ScrollViewer.VerticalScrollBarVisibility="Auto" 
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  Visibility="{Binding HasDiscoveryErrors, Converter={StaticResource BooleanToVisibilityConverter}}"
                  Height="200"
                  Margin="10"
                  Width="Auto">
            <b:Interaction.Behaviors>
                <local:ListViewScrollBarBehavior />
            </b:Interaction.Behaviors>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Computer" 
                                    DisplayMemberBinding="{Binding PrincipalName}" 
                                    Width="200"/>
                    <GridViewColumn Header="Error"
                                    DisplayMemberBinding="{Binding ExceptionMessage}" 
                                    Width="600"/>
                </GridView>
            </ListView.View>
        </ListView>

        <Label Margin="5" Style="{DynamicResource SubDescriptionHeaderStyle}" Content="Discovered rules" />

        <TextBlock Margin="10 5 5 5" 
                   Text="{Binding TargetCount}"/>

        <ContentControl Height="300"
                        s:View.Model="{Binding Targets}" 
                        IsTabStop="False"/>


    </StackPanel>
</UserControl>
