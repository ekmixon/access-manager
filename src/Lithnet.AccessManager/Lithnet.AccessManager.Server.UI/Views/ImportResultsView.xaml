<UserControl x:Class="Lithnet.AccessManager.Server.UI.ImportResultsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Lithnet.AccessManager.Server.UI"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             Dialog:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" 
            d:DesignWidth="800">
    <StackPanel>

        <DockPanel>
            <Button DockPanel.Dock="Right" Margin="5" Click="{s:Action Help}" Background="Transparent" BorderThickness="0" Focusable="False" >
                <iconPacks:PackIconMaterialLight Kind="HelpCircle" />
            </Button>
            <Label DockPanel.Dock="Left" Style="{DynamicResource DescriptionHeaderStyle}" Content="Review discovery results" />
        </DockPanel>

        <Separator Margin="5 0 5 0" Height="1"
                   Width="Auto"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Top"                   
                   Background="#11000000" />

        <Label Margin="5" 
               Style="{DynamicResource SubDescriptionHeaderStyle}"
               Content="Merge settings" />

        <StackPanel Margin="15 0 15 0">
            <CheckBox Margin="0 5 5 2"
                  Content="Where a rule for a target already exists, merge the permissions into that rule"
                  Background="Transparent"
                  IsChecked="{Binding Merge}"/>

            <CheckBox Margin="0 2 5 5"
                  Content="Overwrite conflicting settings in the existing rule with the values from the new rule"
                  Background="Transparent"
                  IsEnabled="{Binding Merge}"
                  IsChecked="{Binding MergeOverwrite}"/>

        </StackPanel>

        <Label Margin="5" Style="{DynamicResource SubDescriptionHeaderStyle}" Content="Discovery issues" 
                  Visibility="{Binding HasDiscoveryErrors, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <StackPanel Visibility="{Binding HasDiscoveryErrors, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Margin="15 0 15 0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" 
                           Text="{Binding DiscoveryErrorCount, FallbackValue='0 discovery issues'}" 
                           TextWrapping="Wrap"
                           Padding="0 2 0 2"/>

                <StackPanel Grid.Column="1"
                    Orientation="Horizontal"  HorizontalAlignment="Right" >

                    <CheckBox Content="Errors"
                          IsChecked="{Binding ShowErrors}"
                          Margin="10 0 0 0"/>
                    <CheckBox Content="Warnings"
                          IsChecked="{Binding ShowWarnings}"
                          Margin="10 0 0 0"/>
                    <CheckBox Content="Informational"
                          IsChecked="{Binding ShowInformational}"
                          Margin="10 0 0 0"/>
                </StackPanel>
            </Grid>

            <ListView BorderBrush="{StaticResource MahApps.Brushes.Control.Border}" BorderThickness="1"
                  ItemsSource="{Binding DiscoveryErrors}"
                  
                  Height="200"
                  Margin="0 10 0 0"
                  VirtualizingPanel.IsContainerVirtualizable="True"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  VirtualizingPanel.VirtualizationMode="Recycling" 
                  ScrollViewer.IsDeferredScrollingEnabled="True" 
                  Width="Auto">
                <b:Interaction.Behaviors>
                    <local:ListViewScrollBarBehavior />
                </b:Interaction.Behaviors>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <iconPacks:PackIconFontAwesome Kind="ExclamationTriangleSolid"
                                                                   Margin="0 0 5 0"
                                                                   Visibility="{Binding IsWarning, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                   Foreground="DarkOrange"/>
                                        <iconPacks:PackIconFontAwesome Kind="ExclamationTriangleSolid"
                                                                   Margin="0 0 5 0"
                                                                   Visibility="{Binding IsError, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                   Foreground="Red"/>
                                        <iconPacks:PackIconBoxIcons Kind="RegularInfoCircle" 
                                                                Foreground="CornflowerBlue" 
                                                                Visibility="{Binding IsInformational, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                                VerticalAlignment="Center"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Header="Target" 
                                    DisplayMemberBinding="{Binding Target}" 
                                    Width="200"/>
                        <GridViewColumn Header="Principal" 
                                    DisplayMemberBinding="{Binding Principal}" 
                                    Width="200"/>
                        <GridViewColumn Header="Message"
                                    DisplayMemberBinding="{Binding Message}" 
                                    Width="600"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right">
                <Button Content="Export to CSV..."
                    Command="{s:Action Export}"
                    Margin="5 5 0 0"/>
            </StackPanel>

        </StackPanel>

        <Label Margin="5" Style="{DynamicResource SubDescriptionHeaderStyle}" Content="Discovered rules" />

        <StackPanel Margin="15 0 15 0" >
            <TextBlock Text="{Binding TargetCount, FallbackValue='0 rules found'}" 
                       TextWrapping="Wrap"
                       Padding="2 2 0 2"/>

            <ContentControl Height="300" d:Content="List view goes here"
                        s:View.Model="{Binding Targets}" 
                        IsTabStop="False"/>
        </StackPanel>

    </StackPanel>
</UserControl>
